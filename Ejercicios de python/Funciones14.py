""" Vamos a crear un programa para trabajar con una pila. Una pila es una estructura de datos que nos permite guardar un conjunto de variables. La caracterÃ­stica fundamental es que el Ãºltimo elemento que se aÃ±ade al conjunto es el primero que se puede sacar.
Para representar una pila vamos a utilizar una lista de cadenas de caracteres.
Vamos a crear varias funciones para trabajar con la pila:
â€¢ LongitudPila: FunciÃ³n que recibe una pila y devuelve el nÃºmero de elementos que tiene. 
â€¢ EstaVaciaPila: FunciÃ³n que recibe una pila y que devuelve si la pila estÃ¡ vacÃ­a, no tiene 
elementos. 
â€¢ EstaLlenaPila: FunciÃ³n que recibe una pila y que devuelve si la pila estÃ¡ llena. 
â€¢ AddPila: funciÃ³n que recibe una cadena de caracteres y una pila, y aÃ±ade la cadena a la pila, 
si no estÃ¡ llena. si esta llena muestra un mensaje de error. 
â€¢ SacarDeLaPila: FunciÃ³n que recibe una pila y devuelve el Ãºltimo elemento aÃ±adido y lo 
borra de la pila. Si la pila estÃ¡ vacÃ­a muestra un mensaje de error. 
â€¢ EscribirPila: FunciÃ³n que recibe una pila y muestra en pantalla los elementos de la pila. 
Realiza un programa principal que nos permita usar las funciones anterior, que nos muestre un menÃº, 
con las siguientes opciones:
1. AÃ±adir elemento a la pila 
2. Sacar elemento de la pila 
3. Longitud de la pila 
4. Mostrar pila 
5. Salir """

def longitudPila(pila):
    return (len(pila))
""" asd = longitudPila(["hola","asd"])
print(asd) """

def estaVaciaPila(pila):
    return len(pila) == 0
""" asd2 = estaVaciaPila([])
print(asd2) """

def estaLlenaPila(pila):
    max = 5
    if len(pila) >= max:
        return True
    return False
""" asd = estaLlenaPila(["1","2","3","4","5"])
print(asd) """

def addPila (caracter, pila):
    if estaLlenaPila(pila):
        return "Mensaje de error. La pila esta llena."
    else:
        pila.append(caracter)
        """ print(pila) """
""" asd = addPila("6",["1","2","3","4"])
print(asd) """

def sacarDeLaPila(pila):
    if estaVaciaPila(pila):
        return "Mensaje de error. La pila esta vacia."
    pilaSacada = pila.pop()
    return pilaSacada
""" asd = sacarDeLaPila(["1","2","3","4","5"])
print(asd) """

def escribirPila(pila):
    return pila
""" asd = escribirPila(["1","2","3","4","5"]) """

opcion = 0
pila = []
print("ðŸš© Bienvenido usuario ðŸš©")
while True:
    try:
        print(""" 
    ðŸ¤“ Seleccione una de las siguientes opciones para continuar:
            1. AÃ±adir elemento a la pila 
            2. Sacar elemento de la pila 
            3. Longitud de la pila 
            4. Mostrar pila 
            5. Salir """)
        opcion = int(input("ðŸ¤“ Ingrese una opciÃ³n: "))
    except:
        print("ðŸ’¥ OpciÃ³n invalida, intentelo de nuevo.")

    if opcion == 1:
        caracter = input("Ingrese un caracter o una cadena de caracter para agregar a la pila: ")
        resultado = addPila(caracter, pila)
        if resultado:
            print(resultado)
            continue
    
    elif opcion == 2:
        resultado = sacarDeLaPila(pila)
        if resultado:
            print(resultado)
            continue
    
    elif opcion == 3:
        resultado = longitudPila(pila)
        print(resultado)
        continue

    elif opcion == 4:
        resultado = escribirPila(pila)
        print(resultado)
        continue
    

    elif opcion == 5:
        print("\nðŸ˜Ž Que tengas un buen dÃ­a, gracias por confiar en nosotros.")
        break;
